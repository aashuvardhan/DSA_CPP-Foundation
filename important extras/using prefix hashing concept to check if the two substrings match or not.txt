#include <bits/stdc++.h>
using namespace std;


long long power(long long base,long long n,long long mod){
    long long ans=1;
    while(n!=0){
        if(n%2==1){
            n=n-1;
            ans=(ans*base)%mod;
        }else{
            n=n/2;
            base=(base*base)%mod;
        }
    }
    return ans;
}


long long computeHashSubstring(vector<long long>& prefix_hash,int left,int right){
    
    long long hash=prefix_hash[right];
    long long mod=1e9+7;
    if(left>0){
        hash=(hash-prefix_hash[left-1]+mod)%mod;
    }
    
    long long inv_pwr=power(power(31,left,mod),mod-2,mod);
    
    
    hash=(hash*inv_pwr)%mod;
    return hash;
    
}


int main() {
	// your code goes here
	string str="abcdab";
	vector<long long> prefix_hash;
	long long hash=0;
	long long pwr=1;
	long long mod=1e9+7;
	
	
	for(int i=0;i<str.size();i++){
	    hash=(hash+((str[i]-'a'+1)*pwr)%mod)%mod;
	    pwr=(pwr*31)%mod;
	    prefix_hash.push_back(hash);
	}
	
	
	int i1=0,j1=1,i2=4,j2=5;
	long long hash1=computeHashSubstring(prefix_hash,i1,j1);
	
	long long hash2=computeHashSubstring(prefix_hash,i2,j2);
	
	
	
	
	if(hash1==hash2){
	    cout<<"Yes"<<endl;
	}else{
	    cout<<"NO"<<endl;
	}
	
	

}
